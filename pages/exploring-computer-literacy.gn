!meta!
title: Exploring Computer Literacy
!meta!

[h2|Exploring Computer Literacy]

[fieldset|
	[legend|Note]
	[p|This is an essay I'm working on for school, but I like it enough to publish here :>]
]

[p|It hurts me to see humanity being so thoughtlessly self-destructive.]

[p|That is the point of this essay. My first revisions were mostly data, trying to show [i|how] we're being self destructive without effectively getting at [i|why that matters to me]. Here I will try to rely less on data, and more on expressing my thoughts.]

[hr|]

[p|I love lots of things about computers. My laptop is a safe space for me; it has all the tools I need to play, it looks exactly how I want it to look, and it allows me to communicate with digital spaces in which I can express myself and converse with others. I have a website, a labor of love for two and a half years, which holds my notes, thoughts, hopes, and silly cat videos. It is beautiful, and can run on anything from the newest apple device to a nintendo 3ds. I have a second-hand ebook reader now used by me to store copies of novels, comics, and textbooks for compact offline reading. I have a small hard drive which stores hundreds of gigabytes of media - movies, tv shows, random videos, and the entirety of wikipedia - which I share with others.]

[p|But my use of these tools is tarnished by two things. One: the environmental cost of modern computing is horrifying. Two: access to information about these tools is hidden and disincentivized, because it is profitable for people to know less. Both are social issues; the first is also a technological issue, and the second is also an educational issue. ]

[p|The issue of environmental cost is both hard to conceptualize and very important. Computers need significant amounts of power to run, but also take huge amounts of power to produce. The energy required to make just one chip in a component called the RAM is equivalent to running the laptop it will be used in for 600 hours, but this chip, held in your hand, would only weigh as much as a paper clip. The entire RAM card in your computer, which is made of many small chips, took more energy to produce than the whole computer will use over its entire life [a, href: "#1"|[sup|1]].]

[p|One way to help fix this issue now is to use computers for longer. Current data show that laptops are normally used for 4 years, and powering the computer over that time only accounts for 15% of its carbon footprint [a, href: "#2"|[sup|2]]. To balance out that high manufacturing cost, we need to increase how long laptops are used to 25 years [a, href: "#1"|[sup|1]].]

[p|A quarter of a century is a long time to use a computer though, so how would that even be possible when most laptops start to feel slow after only a few years? The answer to this turns out to be quite complicated - a tangled mess of economics and engineering and history. ]

[p|To start exploring the long-term usage of modern computers, what do most people really use computers for? I at least, and I think most others, really only do a few things on my laptop. Watching video media like netflix or youtube, editing text for work of some kind, and browsing the internet. A simple enough list, no? Looking at it though, these are all solved problems! Text editing was something we figured out how to do when computers were the size of whole buildings, digital video has been around for almost 40 years, and the internet is already several decades old. So why do modern computers still sometimes seem slow? The modern laptop is equal to a significant percentage of the entire world's compute power in 1985, yet still struggles if you open a few windows of google chrome!]

[p|One good answer is planned obsolesence, which is when products are purposefully designed to break over time to get consumers to buy replacements. Though you will certainly find examples of this in modern hardware (newer iPhones are a great example), most often this degradation happens in software. Where this mostly happens is the operating system - the software that sits on top of a computer's hardware and allows you to run useful programs. The two main consumer operating systems are Windows and Mac OS, made by Microsoft and Apple respectively. The way these companies build planned obsolesence into their operating systems is by adding more computational complexity than functionality every time they make an update. As the ratio of size to usefulness constantly increases, consumers are forced to buy more and more powerful computers to keep up.]

[p|So if using computers for longer is a (partial) solution to the problem of the cost of manufacturing, what can people do about the connected issue of planned obsolencence? My best answer unfortunately opens a whole new can of worms, but let's explore it!]

[p|If you want to use a computer for more than maybe 10 years you can't use Windows or Mac OS. Large tech companies are too incentivized to get you to buy their new products, so even the fastest laptop now will probably start feeling slow after three to five years of updates. The solution for now is linux and the open source community. If you're not familiar with tech you might not know what those phrases mean, so: what is linux?]

[p|Because I don't want this to be an essay about linux, I'll try and give a brief overview. Linux is an operating system just like Windows or Mac OS, but it's not made by a company. Instead, it's what is called open source software. Open source software is sort of like wikipedia in that lots of people can help write it, and like wikipedia can actually be very reliable! You probably don't want to put all of your trust in it, but with some care it can be a safe and effective alternative. One reason linux is so good for older hardware is that parts of the community that build it have a (sometimes problematic) obsession with speed and efficiency, and often use older hardware themselves. Another is that because no one owns the rights to linux, many different groups have made their own versions of linux - called distributions - which have different goals and design choices. Some are ultra-minimal, built to run fast on anything, some are designed to be super sleek and user-friendly, and many more have their own unique design influences.]

[p|I've been using linux on an 11 year old laptop for the past three years now, and my experience has had a lot of positives! Even on hardware which is almost three times the age of when most laptops are retired, almost all of the software I run still feels fast. I also have the ability to customize how almost everything looks and behaves, and after three years using my laptop feels like wearing a pair of comfy slippers.]

[p|Unfortunately I always have reservations suggesting linux to people. Not only does it have a steep learning curve, taking months or even years to get used to, but portions of the community can be toxic and actively unhelpful to newcomers. Some parts of the linux community are also actively hateful, with alarming amounts of racism, homophobia, and sometimes straight up neo-nazi facism. So would I love to be able to just say, 'go check out linux'? Yes. Do I feel like that's appropriate in most cases? ... no, not really.]

[p|There are, however, some truly wonderful communities focused on developing conversations around open source software and environmentalism!]

[p|Merveilles is a group of programmers and artists who share a philosophy of considering the impact of their work on the environment and optimizing toward living more sustainably [a, href: "#3"|[sup|3]]. The group is a loose collection of a hundred or so people from around the world; full-time software engineers, artists, students, and teachers. One reason I've personally found this community to be inspiring is the range of ways people think about sustainability in their projects. The community is also a very deliberate construction, with its few rules and conversational best practices in public documents open to everyone. This creates the sense of a shared common space, and interactions tend toward open, forum-like conversations where people are encouraged to share their thoughts and experiences. The result is a huge pool of creativity with a focus on exploring how sustainability and computing can intersect, directing that exploration into work actually building alternatives to traditional software paradigms.]

[p|It's because of the Merveilles community - and others: the right to repair movement, the people working on the MNT Reform, positive advocates of open source software, and all the people who care about the consequences of how we engage with computers - that I can feel hopeful for the future despite how hard all of these issues seem.]

[p|So what could an ecologically sustainable computing future look like? One interesting possibility is outlined in an article title "The 50 year computer", which analyzes how we might go about building a computer to last half a century [a, href: "#4"|4]. It introduces a fascinating concept he calls heirloom computing, the idea that if you could build a computer resilient enough to last many decades it would eventually be passed down from parent to child as a family heirloom. This concept is a good way of getting at a more fundamental truth to permacomputing, that we need to treat our computers with a respect more befitting the huge amount of labor and energy and resources required to make them.]

[p|Will this future come to pass, I have no idea. What I do know is that modern computing is deeply unsustainable, and that we ecologically cannot maintain our current behaviour. I hope that the change comes in a form which returns the power and responsibility of computing to everyone, but we will need to work toward that goal.]

[h3|Sources]

[p|1. [a, id: "1", href: "https://solar.lowtechmagazine.com/2009/06/embodied-energy-of-digital-technology.html"|[b|The Monster Footprint of Digital Technology]], Kris De Decker]
[p|2. [a, id: "2", href: "https://ieeexplore.ieee.org/document/7353286"|[b|Life-Cycle Assessment of Consumer Electronics]], Anders Andrae]
[p|3. [a, id: "3", href: "https://wiki.xxiivv.com/site/merveilles.html"|[b|Merveilles is a community of artisan engineers]], Devine Lu Linvega]
[p|4. [a, id: "4", href: "https://ploum.net/the-computer-built-to-last-50-years/"|[b|The computer built to last 50 years]], Ploum]
