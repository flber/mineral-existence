!meta!
title: Rust Tools - Standard Deviation
template: default-subdir
!meta!

[h2|Standard Deviation]

[p|Calulates the standard deviation of a slice of [code|i32] values.]

[pre|
pub fn std_deviation(data: &[i32]) -> Option<f32> {
  match (mean(data), data.len()) {
    (Some(data_mean), count) if count > 0 => {
      let variance = data
        .iter()
        .map(|value| {
          let diff = data_mean - (*value as f32);
          diff * diff
        })
      .sum::<f32>() / count as f32;

      Some(variance.sqrt())
    }
    _ => None,
  }
}]
